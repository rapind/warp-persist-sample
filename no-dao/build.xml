<?xml version="1.0"?>

<project name="warp-no-dao" basedir="." default="dist">

	<!-- Name of project and version -->
	<property name="proj.name" value="${ant.project.name}" />
	<property name="proj.version" value="0.1" />

	<property name="lib.dir" value="lib" />
	<property name="src.main.dir" value="src/main/java" />
	<property name="src.main.resources.dir" value="src/main/resources" />
	<property name="src.test.dir" value="src/test/java" />
	<property name="src.test.resources.dir" value="src/test/resources" />
	<property name="target.dir" value="target" />
	<property name="target.compile.main.dir" value="target/classes" />
	<property name="target.compile.test.dir" value="target/test-classes" />
	<property name="dist.dir" value="target/dist" />

	<!-- Classpath declaration -->
	<path id="master.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement path="${api.classes.dir}" />
	</path>

	<target name="clean" description="Clean output dir">
		<delete dir="${target.dir}" />
	</target>

	<target name="compile" description="Compile main source tree java files into class files">

		<!-- create main compile dir -->
		<mkdir dir="${target.compile.main.dir}" />

		<!-- compile main classes -->
		<javac destdir="${target.compile.main.dir}" source="1.5" target="1.5" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.main.dir}" />
			<classpath refid="master.classpath" />
		</javac>

		<!-- copy the resources to the main compile dir -->
		<copy todir="${target.compile.main.dir}">
			<fileset dir="${src.main.resources.dir}">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${src.main.dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>

	</target>

	<target name="compile-test" description="Compile test source tree java files into class files">

		<!-- create test compile dir -->
		<mkdir dir="${target.compile.test.dir}" />

		<!-- compile test classes -->
		<javac destdir="${target.compile.test.dir}" source="1.5" target="1.5" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.test.dir}" />
			<classpath refid="master.classpath" />
			<classpath location="${target.compile.main.dir}" />
		</javac>

		<!-- copy the test resources to the test compile dir -->
		<copy todir="${target.compile.test.dir}">
			<fileset dir="${src.test.resources.dir}">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
			</fileset>
		</copy>

	</target>

	<!-- RUN -->
	<target name="run" depends="compile">

		<java classname="org.rapin.app.Startup">
			<classpath refid="master.classpath" />
			<classpath location="${target.compile.main.dir}" />
		</java>

	</target>

	<!-- TEST -->
	<target name="test" depends="compile,compile-test">

		<junit dir="${basedir}" forkmode="perBatch" printsummary="yes" haltonfailure="yes" haltonerror="yes">

			<classpath location="${target.compile.test.dir}" />
			<classpath location="${target.compile.main.dir}" />
			<classpath refid="master.classpath" />

			<formatter type="plain" usefile="false" />

			<batchtest fork="false">
				<fileset dir="${target.compile.test.dir}" includes="**/*" excludes="**/Base*" />
			</batchtest>

		</junit>

	</target>

	<target name="dist" depends="clean,test" description="Clean, compile, test, jar">

		<mkdir dir="${dist.dir}" />

		<jar jarfile="${dist.dir}/${proj.name}-${proj.version}.jar" compress="true" basedir="${target.compile.main.dir}" />

	</target>

</project>
